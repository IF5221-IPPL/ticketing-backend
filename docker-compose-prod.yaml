version: "3"
services:
  mongodb:
    container_name: ippl-mongo
    image: mongo
    restart: unless-stopped
    ports:
      - $DB_PORT:27017
    env_file: ./.env
    environment:
      MONGODB_USER: $DB_USERNAME
      MONGODB_PASSWORD: $DB_PASSWORD
      MONGO_INITDB_ROOT_USERNAME: $DB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $DB_PASSWORD
      MONGO_INITDB_DATABASE: $DB_NAME
    volumes:
      - db:/data/db
    networks:
      - app-network

  mongo-express:
    container_name: ippl-mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    env_file: ./.env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $DB_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $DB_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://$MONGODB_USER:$MONGODB_PASSWORD@mongodb:27017/$DB_NAME
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - app-network

  minio:
    container_name: ippl-minio
    image: quay.io/minio/minio
    restart: unless-stopped
    ports:
      - 9000:9000
      - "9001:9001"
    env_file: ./.env
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: $S3_USER
      MINIO_ROOT_PASSWORD: $S3_PASSWORD
      MINIO_ACCESS_KEY: $S3_ACCESS_KEY_ID
      MINIO_SECRET_KEY: $S3_ACCESS_SECRET_KEY
    networks:
      - app-network

  api-server:
    depends_on:
      - mongodb
    build:
      context: .
    container_name: api-server
    restart: always
    env_file: ./.env
    environment:
      - DB_HOST=mongodb
      - DB_NAME=$DB_NAME
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD=$DB_PASSWORD
      - DB_PORT=$DB_PORT
    ports:
      - 3000:3000
    networks:
      - app-network
    volumes:
      - ./logs:/logs
      - ./public:/usr/src/app/dist/src/public
    command: /bin/bash -c 'while !</dev/tcp/mongodb/27017; do sleep 1; done; yarn start'

  caddy:
    image: caddy:2.6.2-alpine
    container_name: caddy
    restart: unless-stopped
    depends_on:
      - api-server
      - minio
      - mongodb
      - mongo-express
    networks:
      - web
      - app-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile

volumes:
  db:
  minio-data:
  public:

networks:
  web:
    external: true
  app-network:
    external: false
    driver: bridge
